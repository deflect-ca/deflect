# logging.level: debug

metricbeat.config:
  modules:
    path: ${path.config}/modules.d/*.yml
    # Reload module configs as they change:
    reload.enabled: false

metricbeat.autodiscover:
  providers:
    - type: docker
      hints.enabled: true

metricbeat.modules:
- module: docker
  metricsets:
    - "container"
    - "cpu"
    - "diskio"
    - "healthcheck"
    - "info"
    - "image"
    - "memory"
    - "network"
  hosts: ["unix:///var/run/docker.sock"]
  period: 19s
  enabled: true
- module: nginx
  metricsets: ["stubstatus"]
  enabled: true
  period: 21s
  hosts: ["http://127.0.0.1"]  # XXX we have to be in nginx's network namespace, is that a good idea?
  # headers:
  #   Host: nginx  # XXX this does not work! https://github.com/elastic/beats/issues/14907
  server_status_path: "stub_status"

processors:
  - add_cloud_metadata: ~
  - add_fields:
      fields:
        dnet: "${DEFLECT_DNET}"
        edge_name: "${DEFLECT_EDGE_NAME}"

# XXX
setup.kibana.host: "http://kibana:5601"
setup.kibana.ssl.enabled: true
ssl.certificate_authorities:
  - /usr/share/metricbeat/ca.crt

output.elasticsearch:
  hosts: '${ELASTICSEARCH_HOST}'
  ssl.certificate_authorities:
    - /usr/share/metricbeat/ca.crt
  ssl.verification_mode: certificate
  username: elastic
  password: '${ELASTICSEARCH_PASSWORD:}'
  indices:
    - index: "metricbeat-stubstatus-%{[agent.version]}"
      when.equals:
        metricset.name: "stubstatus"
    - index: "metricbeat-network-%{[agent.version]}"
      when.equals:
        metricset.name: "network"
    - index: "metricbeat-cpu-%{[agent.version]}"
      when.equals:
        metricset.name: "cpu"
    - index: "metricbeat-load-%{[agent.version]}"
      when.equals:
        metricset.name: "load"
    - index: "metricbeat-container-%{[agent.version]}"
      when.equals:
        metricset.name: "container"
