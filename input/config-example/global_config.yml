system_root_zone: example.com
login_user: deflect
server_env: staging  # or production
dnets:
  - dnet_a
  - controller
controller:
  hostname: controller.example.com
  ip: 1.2.3.4
  docker_ip: 127.0.0.1  # connect to local docker without SSH
  dnet: controller
edges:
  - hostname: edge-1.example.com
    ip: 2.3.4.5
    dnet: dnet_a
    user: deflect
logging:  # used for filebeat and metricbeat in production
  built_in_elk: True
  elasticsearch_host: https://127.0.0.1:9200
  kibana_host: https://127.0.0.1:5601
  elasticsearch_password: password
fetch_site_yml:
  ssh:
    host: host
    port: 22
    user: user
  scp_src: /path/to/site.yml
  scp_dst: input/config/clients.yml-revisions
  tls_src: /path/to/tls_bundles
  tls_dst: input/config/tls_bundles
dns:
  also-notify: 8.8.8.8; 8.8.4.4;
  allow-query: any;
  allow-transfer: 8.8.8.8; 8.8.4.4;
  default_ns:  # the default NS record for each domain
    - ns1.example.com
    - ns2.example.com
  soa_nameserver: dns0.example.com.  # The nameserver to write to SOA records
  soa_mailbox: zone.example.com.
root_zone_extra:  # extra records for system root zone
  'test-origin':
    - type: A
      value: 1.2.3.4  # should be same as controller
  'subdomain':
    - type: A
      value: 8.8.8.8
staging_certbot_options: "--email some@email.com --server https://127.0.0.1:14000/dir --no-verify-ssl"
production_certbot_options: "--email prod@email.com --server https://acme-v02.api.letsencrypt.org/directory"
doh_private_port: 8085
kibana_private_port: 5601
ssl_ciphers: "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA"
nginx:
  allow_purge:
    - ip: 172.17.0.0/24
      comment: Docker network

# Data volumes and paths where the prometheus metrics are stored.
prometheus_data:
  # The path where the data is accesible on the host, it can be a docker volume
  # name, e.g. prometheus-data or a full path in the host, e.g.:
  # /var/log/prometheus
  # If you chose to use a volume name the data will be accessible at:
  # /var/lib/docker/volumes/{your_volume_name}
  host_path: prometheus-data
  # This path is used to mount the docker volume inside of the container the same
  # docker volume is shared between deflect containers but each service should
  # write only in its own file, e.g /var/log/prometheus/edgemanage.prom
  container_path: /var/log/prometheus/
